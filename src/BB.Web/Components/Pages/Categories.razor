@page "/Categories"
@using BB.Web.Domain
@using BB.Web.Domain.Actuals
@using Marten
@inject IDocumentStore Store
@rendermode InteractiveServer

<PageTitle>Categories</PageTitle>

<h1>Categories</h1>

<table class="table">
    <thead>
    <tr>
        <th>Category</th>
        <th>SubCategories</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var category in categories)
    {
        <tr>
            <td>@category.Value</td>
            <td>@string.Join(",", category.SubCategories.Select(_ => _.Value))</td>
            <td><button class="btn btn-outline-secondary">Add</button></td>
        </tr>
    }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="Reset">Reset</button>

@code {
    private IReadOnlyList<Category> categories = [];

    protected override async Task OnInitializedAsync()
    {
        await using var session = Store.QuerySession();
        categories = await session.Query<Category>().ToListAsync();
    }

    private async Task Reset()
    {
        await using var session = Store.LightweightSession();
        Category[] defaultCategories = [
            Category.All,
            Category.Create("Food",
            [
                Category.Create("Dining Out"),
                Category.Create("Groceries"),
            ]),
            Category.Create("Cars",
            [
                Category.Create("Gas"),
                Category.Create("Insurance"),
                Category.Create("Maintenance"),
            ])
        ];
        
        session.DeleteWhere((Category c) => true);
        session.Store(defaultCategories);

        await session.SaveChangesAsync();
        categories = await session.Query<Category>().ToListAsync();
    }
}